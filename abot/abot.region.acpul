### 1510 abot.region

r0:=k==0;

draw(r0, 1511);

_ @1010;
_ @sys.abot;
_ @sys.node;

vw 1024; vh 768;
x:=-vw/2;
y:=-vh/2;

REGION.VIDEO 1512;
node.new.this.ex(r0, REGION.VIDEO, 0);

k:=1;


#region.window.control
# define region:
# <window> <control> 
rn.xcode.panel.view 0;
rn.xcode.panel.buttons 1;
rn.xcode.editor.view 2;
rn.xcode.vars 3;
rn.xcode.console 4;
rn.xcode.build.status 5;
rn.xcode.simulator 6;

wnd.xcode.acpubot 1;

abot.regions {
 _ @1010;
 _ @sys.obj;

 o {
  wnd 0;
  ctrl 1;
  view 2;
  video 6;
  src 10;
 };
 max 14;

 create map.new(u0, max, max);

 region {
  query.window {
   it.key.new(u0, _0,0, _1*1000+_2);
   it.dma(u0, 0, _0,0);
   dma.set2(u0, 0, o.wnd, _1,_2);
  };
  view 
   dma.set4(u0, 0, o.view, _0,_1, _2,_3);
  video 
   dma.set4(u0, 0, o.video, _0,_1, _2,_3);
  src 
   dma.set4(u0, 0, o.src, _0,_1, _2,_3);
 };

};

region abot.regions.region;

if (1)
{
 r7:=abot.regions.create();

 region.query.window(r7, wnd.xcode.acpubot, rn.xcode.panel.view);
 region.view(0,0, 100,100);
 #region.video(100+sin(t)*100,0, 100,100);
 region.video(0,0, 100,100);
# region.src(0,0, 100,100);
 region.src(1700+sin(t)*100,0, 100,100);
 
 abot.sync.regions(u0, r7);
};

t+=dt;

# removed [
# ## 1516 abot.region.data.windows
# #<wnd> <prefix> <index>
# XCode ACPUBot 0
# removed ]

### 1511 abot.region.draw

color(u0, 0,0.5,0.5,0.5);
rect(u0, 6, 0,0, 1024,768);

# ---- ---- ---- ---- [
# ---- ---- ---- ---- ]

### 1512 abot.region.video

r0:=k==0;

draw(r0, 1513);

_ @1010;
_ @sys.node;

if (r0)
{
 r1:=node.ex.texture.create.fmt(r0, 1024,768, node.ex.texture.fmt.rgb565, 1);
};

r:=180;
x:=1024;
y:=768;

k:=1;

### 1513 abot.region.video.draw

_ @1010;
_ @sys.node;

tex0 r1;
gl node.ex.gl;
shader node.ex.shader;

_ @sys.abot;
abot.stream.render.texture(u0, 0, tex0);

shader.use(u0, 1514, 1515);
shader.uniform.texture(u0, 0, r1, 0);
shader.uniform.f1(u0, 1, 0.5+0.5*sin(l15*1));

bw 1024;
bh 768;
gl.rect(u0, +30,0, bw-60,bh);

# ---- ---- ---- ---- [
# ---- ---- ---- ---- ]

### 1514:S abot.region.video.vsh

attribute vec4 a_position;
attribute vec2 a_texCoord;

varying mediump vec2 v_texCoord;
varying mediump vec4 v_p;

void main()
{
   gl_Position = CC_MVPMatrix * a_position+vec4(sin(a_position.x*0.05)*0.0,0.0,0.0,0.0);

   v_texCoord = a_texCoord;
   v_p = gl_Position;
}

### 1515:S abot.region.video.fsh

#ifdef GL_ES
precision lowp float;
#endif

varying vec2 v_texCoord;

uniform sampler2D p0;

void main() 
{
//  gl_FragColor = texture2D(p0, v_texCoord);
  gl_FragColor = texture2D(p0, vec2(1.-v_texCoord.x, v_texCoord.y));

//  gl_FragColor = vec4(1.0,0.5,1.0,0.5);
}
