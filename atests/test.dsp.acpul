### 5250 test.dsp

r0:=k==0;

draw(r0, 5251);

# DSP [

_ @1010;
_ @sys.dsp;

dsp.module1.generator.create {
# # m0dule
# _0:=dsp.module.create(dsp.module.type.generator);
# ps dsp.module.prop.set(__);
# p dsp.module.props.generator;
#
# ps(_0, p.type, _1.type);
# ps(_0, p.frequency, _1.frequency);
# ps(_0, p.amplitude, _1.amplitude);
# ps(_0, p.envelope.attack, _1.envelope.attack);
# ps(_0, p.envelope.decay, _1.envelope.decay);
# ps(_0, p.envelope.sustain, _1.envelope.sustain);
# ps(_0, p.envelope.release, _1.envelope.release);
};

dsp.default.module.generator.info {
 p dsp.module.props.generator;
 type p.types.sine;
 frequency 1;
 amplitude 0.5;
 envelope {
  attack 0.1;
  decay 0.2;
  sustain 0.1;
  release 0.1;
 };
 add.harmonic module.generator.create.harmonic(__);
 mixer.volume module.mixer.volume(__);
 new module.generator.create(__);
};

# A [
am0 r15;
gen0 { _ dsp.default.module.generator.info;
 type p.types.saw;
};
#gen0.new(am0, gen0);
#gen0.add.harmonic(am0, 400, 1);
#gen0.mixer.volume(am0, 0.9);
dsp.module.generator.create.harmonic(am0, 555,1);

# A ]
# B [

gen1 { _ dsp.default.module.generator.info;
 type p.types.sine;
 self r14;
 new(self, gen1);
 add.harmonic(self, 400, 1);
 mixer.volume(self, 0.9);
};
#gen1; # THE BEST!!! mean 'define gen1'

# B ]
# DSP ]

_ @1010;
_ @sys.llog;

ll0 r0;
llog.begin(ll0, S.livelogging.tests);
llog.print(ll0, S.TEST.DSP);
llog.end(ll0);

x:=100;

t+=dt;

k:=1;

### 5251 test.dsp.draw

color(u0, 0,0,1,0.9);
rect(u0, 2, 0,0, 270,145);

fx sin((_0+0.5)*pi/2+t)*25;
fy cos((_0+0.5)*pi/2+t)*25;
r 15;

color(u0, 0.5,0.0,0.2,0.5);
circle(u0, 6, fx(0),fy(0), r, 0, 8, 0);
color(u0, 0.0,0.5,0.2,0.5);
circle(u0, 6, fx(1),fy(1), r, 0, 8, 0);
color(u0, 0.2,0.0,0.5,0.5);
circle(u0, 6, fx(2),fy(2), r, 0, 8, 0);
color(u0, 0.0,0.5,0.9,0.5);
circle(u0, 6, fx(3),fy(3), r, 0, 8, 0);
