### 5300 test.text

r0:=k==0;

draw(r0, 5301);

# font [

_ @1010;
_ @sys.media;
_ @sys.obj;

font0 r3;
fchars r4;
fnt.load {
 font0:=media.ft.load.font(u0, 0, 1000,0,0);
};
if (r0) {
 fnt.load;

 fchars:=buffer.new(u0, 10000*3*4, 100000*3*4); # x,y,z [+ shape] ;
 buffer.add(u0, fchars, 1000*4, 100000*4); # char, texture, offs0,offs1

 buffer.dma(u0, 0, fchars,0);
 buffer.dma(u0, 1, fchars,1);

# media.ft.text.dma(u0, font0,200, S.test.text777, 0,1,-1);
# media.ft.text.dma(u0, font0,150, St.Patrick, 0,1,-1);
# media.ft.text.dma(u0, font0,165, o.ACPU.o, 0,1,-1);
 media.ft.text.dma(u0, font0,200, ACPU, 0,1,-1);

 _ @1010; _ @sys.llog; llog.b(Q.test.font); 
 llog.erase(u0, 0);
 llog.pv(Q.font0, font0); 
 llog.pv(Q.fchars, fchars); 
 llog.pv(Q.text.dma0.size, dma.size(u0, 0)); 
 llog.pv(Q.text.dma1.size, dma.size(u0, 1)); 
 llog.e();

 dma.off(u0, 0);
 dma.off(u0, 1);
};

# font ]


k:=1;

### 5301 test.text.draw

color(u0, 0,1,0,0);
rect(u0, 6, 0,0, 1001,100);

# font draw [

font0 r3;
fchars r4;

_ @1010;
_ @sys.node;
_ @sys.obj;

#node.ex.shader.use(u0, 10010020, 10010021);
node.ex.shader.use(u0, 5302, 5303);

buffer.dma(u0, 0, fchars,0);
buffer.dma(u0, 1, fchars,1);

offscount 1;
l1:=dma.get(u0, 1, offscount);

startitems 8;
itemsize 4;
offstexture 1;
l0:=dma.get(u0, 1, startitems+offstexture);
node.ex.shader.uniform.texture(u0, 0, l0, 0);
if (r0) {
# _ @1010; _ @sys.llog; llog.b(Q.a.notes); llog.pv(Q.texture, l0); llog.e();
 _ @1010; _ @sys.llog; llog.b(Q.a.notes); llog.pv(Q.count, l1); llog.e();
};

l2:=0;
while (l2 < l1) {
 # r0, i, dma,o,esize,stride,count, type,normalized
 a0 0; # verts
 a1 1; # texCoords
 dma0 0;
 eoffs 4*4*l2;
 node.ex.shader.attribute.dma(u0, a1, dma0,eoffs,  2,4,4, 0,0);
 node.ex.shader.attribute.dma(u0, a0, dma0,eoffs+2,2,4,4, 0,0);

 node.ex.gl.draw(u0, 6, 4);
 l2+=1;
};

dma.off(u0, 0);
dma.off(u0, 1);

# font draw ]

### 5302:S text.main.vsh

#define a_position a0
#define a_texCoord a1

attribute vec4 a_position;
attribute vec2 a_texCoord;

varying mediump vec2 v_texCoord;
 
void main()
{
  gl_Position = CC_MVPMatrix * a_position;
  v_texCoord = a_texCoord;
}

### 5303:S text.fill.vsh

varying vec2 v_texCoord;

uniform sampler2D p0;

void main()
{
  vec4 c = texture2D(p0, v_texCoord);
  c = c.a * vec4(0.3,1.,0.+sin(v_texCoord.x*2.),1.);
  gl_FragColor = c;
//  gl_FragColor = vec4(0.5);
}

