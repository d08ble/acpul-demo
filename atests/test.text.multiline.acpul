### 5350 test.text.multiline

r0:=k==0;

draw(r0, 5351);

_ @1010;
_ @sys.media;
_ @sys.obj;
_ @sys.llog;

dma0 0;
dma1 1;

document {
 
};

lines.vec {
 dma5 5;
 b0 l0;

 new {
  # -> o
  b0:=buffer.new(u0, 10000,1000000);
  buffer.dma(u0, dma5, b0,0);
 };
 use {
  # o
  buffer.dma(u0, dma5, _0,0);
 };
 end {
  dma.off(u0, dma5);
 };

 select {
  # i, dma0,dma1
#  font0
#  font0size
  i _0;
  dma0 _1;
  dma1 _2;
  fchars b0;
  
  fchars:=dma.get(u0, dma5,i);

  llog.printv(r0, S.select.fchars, fchars);

  if (fchars>0) {
    buffer.dma(u0, dma0, fchars,0);
    buffer.dma(u0, dma1, fchars,1);
  };

  if (fchars<=0) {
   fchars:=buffer.new(u0, 10000*3*4, 100000*3*4); # x,y,z [+ shape] ;
   buffer.add(u0, fchars, 1000*4, 100000*4); # char, texture, offs0,offs1

   dma.set(u0, dma5,i, fchars);

   buffer.dma(u0, dma0, fchars,0);
   buffer.dma(u0, dma1, fchars,1);

   text S.TEST.TEXT;

   media.ft.text.dma(u0, font0,100, text, dma0,dma1,-1);
  };
 };
};

font0 r3;
fnt.load {
 font0:=media.ft.load.font(u0, 0, 1000,0,0);
};

state {
 view {
  start.x r4;
  start.y r5;
  rows r6;
  cols r7;
 };
};

lvec0 r2;

llog.begin(u0, S.test.text.multiline);
llog.erase(r0, 0);

if (r0) {
 fnt.load;

 state.view.rows:=10;
 state.view.cols:=50;

 lvec0:=lines.vec.new;
 lines.vec.use(lvec0);

 i:=0;
 while(i<state.view.rows) {
  lines.vec.select(i, dma0,dma1);
  llog.printv(u0, S.select.i, i);
#  llog.printo(u0, S.dma0, 0, dma0,-1);
#  llog.printo(u0, S.dma1, 0, dma1,-1);
  i+=1;
 };
 lines.vec.end(lvec0);
};

llog.end(u0);

k:=1;

### 5351 test.text.multiline.draw

_ @1010;
_ @sys.media;
_ @sys.obj;
_ @sys.node;

options.info {
# file {
#  pool 1000;
#  id 0;
#  i 0;
# };
# font.size 100;
  #font0 v0;
  #fchars0 v1;
# fchars0 
 dma0 0;
 dma1 1;
 b0 l0;
 b1 l1;
 b2 l2;
 vsh 10018020;
 fsh 10018021;
 texattr0 0;
 texunit0 0;
};

 draw {
  # options

  #, r0
  #r0 _0;
  #font0 _0.font0;

  fchars0 _0.fchars0;
  dma0 _0.dma0;
  dma1 _0.dma1;
  vsh _0.vsh;
  fsh _0.fsh;
  texattr0 _0.texattr0;
  texunit0 _0.texunit0;

  l0 _0.b0;
  l1 _0.b1;
  l2 _0.b2;

  node.ex.shader.use(u0, vsh,fsh);

#  buffer.dma(u0, dma0, fchars0,0);
#  buffer.dma(u0, dma1, fchars0,1);

  offscount 1;
  l1:=dma.get(u0, 1, offscount);

  startitems 8;
  itemsize 4;
  offstexture 1;
  l0:=dma.get(u0, 1, startitems+offstexture);
  node.ex.shader.uniform.texture.name(u0, texattr0, l0, texunit0);
#  if (r0) {
#   _ @1010; _ @sys.llog; llog.b(Q.tmp.text); llog.pv(Q.texture, l0); llog.e();
#   _ @1010; _ @sys.llog; llog.b(Q.tmp.text); llog.pv(Q.count, l1); llog.e();
#  };

  render.chars {
   l2:=0;
   while (l2 < l1) {
    a0 0; # verts
    a1 1; # texCoords
#   dma0 0;
    eoffs 4*4*l2;
    # r0, i, dma,o,esize,stride,count, type,normalized
    node.ex.shader.attribute.dma(u0, a1, dma0,eoffs,  2,4,4, 0,0);
    node.ex.shader.attribute.dma(u0, a0, dma0,eoffs+2,2,4,4, 0,0);

    node.ex.gl.draw(u0, 6, 4);
    l2+=1;
   };
  };

  render.chars;

  dma.off(u0, dma0);
  dma.off(u0, dma1);
 };

q @5350;
lines q.lines;
state q.state;
lvec0 q.lvec0;

_ @sys.llog;

dma0 0;
dma1 1;

llog.begin(u0, S.test.text.multiline);

lines.vec.use(lvec0);
i:=0;
while(i<state.view.rows) {
 lines.vec.select(i, dma0,dma1); 
#  llog.printv(u0, S.select.i, i);
#  llog.printo(u0, S.dma0, 0, dma0,-1);
#  llog.printo(u0, S.dma1, 0, dma1,-1);
 draw(options.info);
 
 i+=1;
};
lines.vec.end(lvec0);

llog.end(u0);

color(u0, 0,0,1,1);
#rect(u0, 6, 0-1000,0-1000, 10000,10000);
rect(u0, 6, 0,0, 500,500);

