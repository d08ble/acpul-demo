### 3220 Object (type,x,y,...)
#  0      1 2   3      4
# <type> <x,y> <team> <subtype> [bot|player]
# type
#  - map
#  - unit
#  - shot
# team
#  - sys (0)
#  - green
#  - blue
# subtype
#  - none (0)
#  - bot
#  - player
#
# subtype::bot
#  type
#  - robot
#  - tower
#  - homebase
#  - shop
# subtype::player
#  id
#

# types [
types
{
 map 0;
 unit 1;
 shot 2;
 joystick 3;
};
teams
{
 sys 0;
 green 1;
 blue 2;
};
subtypes
{
 none 0;
 bot 1;
 player 2;
};
bots
{
 types
 {
  robot 0;
  tower 1;
  homebase 2;
  shop 3;
 };
};
players
{
 heroes
 {
  debug 0;
  cat 1;
  santa 2;
  angel 3;
 };
 # id
};
# types ]

r0:=k==0;

draw(r0, 3221);

type p0;
if (r0)
{
 x:=p1;
 y:=p2;
};
team p3;
subtype p4;
player.id p5;

r7:=type;

_ @1010;
_ @sys.node;

_ @3200;

MAP 3224;
UNIT 3230;
JOYSTICK 3270;

if (r0)
{
 if (type==types.map) { node.new.this.ex(r0, MAP, 0);};
 if (type==types.unit) { node.new.this.ex(r0, UNIT, 0);};
# if (type==types.shot) { node.new.this.ex(r0, SHOT, 0);};
 if (type==types.joystick) { node.new.this.ex(r0, JOYSTICK, 0);};
};
#s:=4;

# unit code (split later) [

_ @1010;
_ @sys.heap;

# context [
# def [
context.def
{
 nop 0;
 x 1;
 y 2;
 controls # size: 7
 {
  i 3;
  dir {
   x i+0;
   y i+1;
  };
  s0 i+2;
  s1 i+3;
  s2 i+4;
  s3 i+5;
  s4 i+6;
 };
 SIZE 20;
};
# def ]
context
{
 _;
 dd context.def;
 S {set(u0, d.a, _0,_1);};
 G {get(u0, d.a, _0);};
 nop {G(dd.nop);set {S(dd.nop, _0);};};
 x {G(dd.x);set {S(dd.x, _0);};};
 y {G(dd.y);set {S(dd.y, _0);};};

 ctrl context.def.controls;
 dir.x {G(ctrl.dir.x);set {S(ctrl.dir.x, _0);};};
 dir.y {G(ctrl.dir.y);set {S(ctrl.dir.y, _0);};};
 s0 {G(ctrl.s0);set {S(ctrl.s0, _0);};};
 s1 {G(ctrl.s1);set {S(ctrl.s1, _0);};};
 s2 {G(ctrl.s2);set {S(ctrl.s2, _0);};};
 s3 {G(ctrl.s3);set {S(ctrl.s3, _0);};};
 s4 {G(ctrl.s4);set {S(ctrl.s4, _0);};};
};
# context ]

if (type==types.unit)
{
 if (subtype==subtypes.player)
 {
# watch(player.id);
# watch(get(u0, gnet.mem.wr.a, 2));
  x+=get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 2)*gdt*30;
  y+=get(u0, gnet.mem.rd.a, player.id*gnet.mem.wr.size + 3)*gdt*30;
  r7:=player.id+5;
 };
};


# alloc self context [

context.d.a r5;

self context;

if (r0)
{
 heap.alloc(context.d.a, self.def.SIZE);
# self.dir.x.set(177788);
# watch(self.dir.x);
};

# alloc self context ]

# unit code (split later) ]

k:=1;

### 3221 Object.draw

color(u0, 0,0,0,1);
rect(u0, 6, 0,0, 16,16);
color(u0, 1,1,1,1);
rect(u0, 2, 0,0, 16,16);

# draw 0-9 16x16 [
l0:=r7;
l0:=10;
color(u0, 1,1,0,1);
sa line(u0, 3, 5,12, 5,8);
sb line(u0, 3, 5,12, 5+6,12);
sc line(u0, 3, 5+6,12, 5+6,8);
sd line(u0, 3, 5+6,8, 5+6,4);
se line(u0, 3, 5,4, 5+6,4);
sf line(u0, 3, 5,8, 5,4);
sg line(u0, 3, 5,8, 5+6,8);
if (l0==0) {rect(u0, 2, 5,4, 6,8);};
if (l0==1) {line(u0, 3, 8,4, 8,12);};
if (l0==2) {sb;sc;se;sf;sg;};
if (l0==3) {sb;sc;sd;se;sg;};
if (l0==4) {sa;sc;sd;sg;};
if (l0==5) {sb;sa;se;sd;sg;};
if (l0==6) {sa;sb;sd;se;sf;sg;};
if (l0==7) {sb;sc;sd;};
if (l0==8) {sa;sb;sc;sd;se;sf;sg;};
if (l0==9) {sa;sb;sc;sd;se;sg;};
# draw 0-9 16x16 ]
