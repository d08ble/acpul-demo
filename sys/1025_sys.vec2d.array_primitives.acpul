### 1025 sys.vec2d.array_primitives
vec2d.array # primitives
{
 _;
 line
 # x0,y0, x1,x2
 {
  watch(d.n);
  d.n:=d.max;
  watch(d.n);
  b0:=d.max;
  watch(b0);
  i b0;
  dx b1;
  dy b2;
  x b3;
  y b4;
  dx:=(_2-_0)/d.max;
  dy:=(_3-_1)/d.max;
  x:=_0;
  y:=_1;
  i:=0;
  while(i<d.size)
  {
   update(i, x, y);
   x+=dx;
   y+=dy;
   i+=1;
  };
 };

 circle
 # center{x,y}, radius
 {
  i b0;
  cx b1;
  cy b2;
  ph b3;
  dph b4;
  
  d.n:=d.max;
  cx:=_0;
  cy:=_1;
  i:=0;
  ph:=0;
  dph:=pi*2/d.max;
  while(i<d.max)
  {
   proj.x sin(_2)*_3+cx;
   proj.y cos(_2)*_3+cy;
   update(i, 
    proj.x(cx, cy, ph, _2), 
    proj.y(cx, cy, ph, _2));
   ph+=dph;
   i+=1;
  };
 };
};
