### 1031 sys.obj

# object common [

obj.pool.reset obj_pool_reset(_0);

obj.attach obj_attach(_0, _1);
obj.detach obj_detach(_0, _1);

obj.count obj_count(_0, _1);
obj.delete obj_delete(_0, _1);
obj.clear obj_clear(_0, _1);

# object common ]

# map [

map.new
 # u0, itemmax, itemoverhead
 obj_new(_0, 0, _1, _2, 0,0);

it.key
 # u0, id,i, key
 obj_it_select_key(_0, _1, _2, _3, 0);
it.key.new
 # u0, id,i, key
 obj_it_select_key(_0, _1, _2, _3, 1);

# map ]

# object iterator common [

it.begin 
 # u0, id,i
 obj_it_select(_0, _1, _2, 0);
it.end
 # u0, id,i
 obj_it_select(_0, _1, _2, 1);
it.next
 # u0, id,i
 obj_it_select(_0, _1, _2, 2);
it.prev
 # u0, id,i
 obj_it_select(_0, _1, _2, 3);

it.dma
 # u0, dma, id,i
 obj_it_dma(_0, _1, _2,_3);

# object iterator common ]

# buffer [

buffer.new
 # u0, itemmax, itemoverhead
 obj_new(_0, 4, _1, _2, 0,0);
buffer.add
 # u0, id, itemmax, itemoverhead
 obj_add(_0, _1, _2, _3);
buffer.remove
 # u0, id, i
 obj_add(_0);
buffer.dma 
 # u0, dma, id,i
 it.dma(_0, _1, _2,_3);

# buffer ]

# dma [

dma.set
 # u0, dma, offset, v
 dma_set(_0, _1, _2, _3);
dma.set2
 # u0, dma, offset, v0,v1
 dma_set2(_0, _1, _2, _3,_4);
dma.set4
 # u0, dma, offset, v0,v1,v2,v3
 dma_set4(_0, _1, _2, _3,_4,_5,_6);

dma.get
 # u0, dma, offset
 dma_get(_0, _1, _2);
dma.get2
 # u0, dma, offset
 dma_get2(_0, _1, _2);
dma.get4
 # u0, dma, offset
 dma_get4(_0, _1, _2);

dma.copy
 # u0, dma0,offset0, dma1,offset1, size
 dma_get4(_0, _1,_2, _3,_4, _5);

# dma ]

# tree [

tree.new
 1;

it.tree.pre.begin # == it.begin
 # u0, id,i
 obj_it_select2(_0, _1,_2, 0, 0,0);
it.tree.pre.end   # == it.end
 # u0, id,i
 obj_it_select2(_0, _1,_2, 1, 0,0);

it.tree.depth.begin
 # u0, id,i, j,depth
 obj_it_select2(_0, _1,_2, 2, _3,_4);
it.tree.depth.end
 # u0, id,i, j,depth
 obj_it_select2(_0, _1,_2, 3, _3,_4);

it.tree.breadth.begin
 # u0, id,i
 obj_it_select2(_0, _1,_2, 4, 0,0);
it.tree.breadth.end
 # u0, id,i
 obj_it_select2(_0, _1,_2, 5, 0,0);

it.tree.sibling.begin
 # u0, id,i, j
 obj_it_select2(_0, _1,_2, 6, _3,0);
it.tree.sibling.end
 # u0, id,i, j
 obj_it_select2(_0, _1,_2, 7, _3,0);

it.tree.leaf.begin
 # u0, id,i, j
 obj_it_select2(_0, _1,_2, 8, _3,0);
it.tree.leaf.end
 # u0, id,i, j
 obj_it_select2(_0, _1,_2, 9, _3,0);

# tree ]
